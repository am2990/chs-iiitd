<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    <!-- enable use-expressions -->
	
	<http auto-config="true" use-expressions="true">
		
	<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
	<intercept-url pattern="/settings**" access="hasRole('ROLE_ADMIN')" />
	<intercept-url pattern="/dashboard/edit_topic**" access="hasRole('ROLE_ADMIN')" />
	<intercept-url pattern="/dashboard/editUserList**" access="hasRole('ROLE_ADMIN')" />
	<intercept-url pattern="/dashboard/newtopic**" access="hasRole('ROLE_ADMIN')" />
	
	<!-- intercept-url pattern="/search**" access="hasRole('ROLE_USER')" />
	<intercept-url pattern="/searchResult**" access="hasRole('ROLE_USER')" />
	 -->
		
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		
		<form-login 
		    login-page="/login" 
		    default-target-url="/dashboard" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout"  />
		
	</http>
	
	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password, enabled from my_users where username=?"
		  authorities-by-username-query=
		    "select username, role from users_roles1 where username =?  " />
	  </authentication-provider>
	</authentication-manager>

</beans:beans>